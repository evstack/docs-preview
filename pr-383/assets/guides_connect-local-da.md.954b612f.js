import{_ as o,o as a,c as t,X as l}from"./chunks/framework.be0a7370.js";const y=JSON.parse('{"title":"How to Connect a Rollup to a Local DA Network","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"How to Connect a Rollup to a Local DA Network | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/connect-local-da.md","filePath":"guides/connect-local-da.md","lastUpdated":1718365406000}'),e={name:"guides/connect-local-da.md"},n=l(`<h1 id="how-to-connect-a-rollup-to-a-local-da-network" tabindex="-1">How to Connect a Rollup to a Local DA Network <a class="header-anchor" href="#how-to-connect-a-rollup-to-a-local-da-network" aria-label="Permalink to &quot;How to Connect a Rollup to a Local DA Network&quot;">​</a></h1><p>This guide provides a quick and straightforward method to start a local Data Availability (DA) network and configure your rollup to post data to it.</p><h2 id="setting-up-a-local-da-network" tabindex="-1">Setting Up a Local DA Network <a class="header-anchor" href="#setting-up-a-local-da-network" aria-label="Permalink to &quot;Setting Up a Local DA Network&quot;">​</a></h2><p>To set up a local DA network node on your machine, run the following script to install and start the local DA node:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://rollkit.dev/install-local-da.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{{constants.localDALatestTag}}</span></span></code></pre></div><p>This script will build and run the node, which will then listen on port <code>7980</code>.</p><h2 id="configuring-your-rollup-to-connect-to-the-local-da-network" tabindex="-1">Configuring Your Rollup to Connect to the Local DA Network <a class="header-anchor" href="#configuring-your-rollup-to-connect-to-the-local-da-network" aria-label="Permalink to &quot;Configuring Your Rollup to Connect to the Local DA Network&quot;">​</a></h2><p>To connect your rollup to the local DA network, you need to pass the <code>--rollkit.da_address</code> flag with the local DA node address.</p><h2 id="run-your-rollup" tabindex="-1">Run Your Rollup <a class="header-anchor" href="#run-your-rollup" aria-label="Permalink to &quot;Run Your Rollup&quot;">​</a></h2><p>Start your rollup node with the following command, ensuring to include the DA address flag:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rollkit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">--rollkit.da_address</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:7980</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">other-flag</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>By following these steps, you will set up a local DA network node and configure your rollup to post data to it. This setup is useful for testing and development in a controlled environment.</p>`,13),s=[n];function r(c,p,i,d,u,h){return a(),t("div",null,s)}const D=o(e,[["render",r]]);export{y as __pageData,D as default};
