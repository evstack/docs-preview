import{_ as e,o as a,c as t,X as n}from"./chunks/framework.be0a7370.js";const m=JSON.parse('{"title":"How to create a chain configuration for a new rollup","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"How to create a chain configuration for a new rollup | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/chain-config.md","filePath":"guides/chain-config.md","lastUpdated":1717418463000}'),i={name:"guides/chain-config.md"},s=n('<h1 id="how-to-create-a-chain-configuration-for-a-new-rollup" tabindex="-1">How to create a chain configuration for a new rollup <a class="header-anchor" href="#how-to-create-a-chain-configuration-for-a-new-rollup" aria-label="Permalink to &quot;How to create a chain configuration for a new rollup&quot;">​</a></h1><p>#!/bin/sh</p><h1 id="set-variables-for-the-chain" tabindex="-1">set variables for the chain <a class="header-anchor" href="#set-variables-for-the-chain" aria-label="Permalink to &quot;set variables for the chain&quot;">​</a></h1><p>VALIDATOR_NAME=validator1 CHAIN_ID=gm KEY_NAME=gm-key KEY_2_NAME=gm-key-2 KEY_RELAY=gm-relay CHAINFLAG=&quot;--chain-id ${CHAIN_ID}&quot; TOKEN_AMOUNT=&quot;10000000000000000000000000stake&quot; STAKING_AMOUNT=&quot;1000000000stake&quot;</p><h1 id="build-and-install-the-gm-chain-with-rollkit" tabindex="-1">build and install the gm chain with Rollkit <a class="header-anchor" href="#build-and-install-the-gm-chain-with-rollkit" aria-label="Permalink to &quot;build and install the gm chain with Rollkit&quot;">​</a></h1><p>go install ./cmd/gmd</p><h1 id="reset-any-existing-genesis-chain-data" tabindex="-1">reset any existing genesis/chain data <a class="header-anchor" href="#reset-any-existing-genesis-chain-data" aria-label="Permalink to &quot;reset any existing genesis/chain data&quot;">​</a></h1><p>gmd tendermint unsafe-reset-all</p><h1 id="initialize-the-validator-with-the-chain-id-you-set" tabindex="-1">initialize the validator with the chain ID you set <a class="header-anchor" href="#initialize-the-validator-with-the-chain-id-you-set" aria-label="Permalink to &quot;initialize the validator with the chain ID you set&quot;">​</a></h1><p>gmd init $VALIDATOR_NAME --chain-id $CHAIN_ID</p><h1 id="add-keys-for-key-1-and-key-2-to-keyring-backend-test" tabindex="-1">add keys for key 1 and key 2 to keyring-backend test <a class="header-anchor" href="#add-keys-for-key-1-and-key-2-to-keyring-backend-test" aria-label="Permalink to &quot;add keys for key 1 and key 2 to keyring-backend test&quot;">​</a></h1><p>gmd keys add $KEY_NAME --keyring-backend test gmd keys add $KEY_2_NAME --keyring-backend test echo &quot;milk verify alley price trust come maple will suit hood clay exotic&quot; | gmd keys add $KEY_RELAY --keyring-backend test --recover</p><h1 id="add-these-as-genesis-accounts" tabindex="-1">add these as genesis accounts <a class="header-anchor" href="#add-these-as-genesis-accounts" aria-label="Permalink to &quot;add these as genesis accounts&quot;">​</a></h1><p>gmd genesis add-genesis-account $KEY_NAME $TOKEN_AMOUNT --keyring-backend test gmd genesis add-genesis-account $KEY_2_NAME $TOKEN_AMOUNT --keyring-backend test gmd genesis add-genesis-account $KEY_RELAY $TOKEN_AMOUNT --keyring-backend test</p><h1 id="set-the-staking-amounts-in-the-genesis-transaction" tabindex="-1">set the staking amounts in the genesis transaction <a class="header-anchor" href="#set-the-staking-amounts-in-the-genesis-transaction" aria-label="Permalink to &quot;set the staking amounts in the genesis transaction&quot;">​</a></h1><p>gmd genesis gentx $KEY_NAME $STAKING_AMOUNT --chain-id $CHAIN_ID --keyring-backend test</p><h1 id="collect-genesis-transactions" tabindex="-1">collect genesis transactions <a class="header-anchor" href="#collect-genesis-transactions" aria-label="Permalink to &quot;collect genesis transactions&quot;">​</a></h1><p>gmd genesis collect-gentxs</p><h1 id="copy-centralized-sequencer-address-into-genesis-json" tabindex="-1">copy centralized sequencer address into genesis.json <a class="header-anchor" href="#copy-centralized-sequencer-address-into-genesis-json" aria-label="Permalink to &quot;copy centralized sequencer address into genesis.json&quot;">​</a></h1><h1 id="note-validator-and-sequencer-are-used-interchangeably-here" tabindex="-1">Note: validator and sequencer are used interchangeably here <a class="header-anchor" href="#note-validator-and-sequencer-are-used-interchangeably-here" aria-label="Permalink to &quot;Note: validator and sequencer are used interchangeably here&quot;">​</a></h1><p>ADDRESS=$(jq -r &#39;.address&#39; ~/.gm/config/priv_validator_key.json) PUB_KEY=$(jq -r &#39;.pub_key&#39; ~/.gm/config/priv_validator_key.json) jq --argjson pubKey &quot;$PUB_KEY&quot; &#39;.consensus[&quot;validators&quot;]=[{&quot;address&quot;: &quot;&#39;$ADDRESS&#39;&quot;, &quot;pub_key&quot;: $pubKey, &quot;power&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;Rollkit Sequencer&quot;}]&#39; ~/.gm/config/genesis.json &gt; temp.json &amp;&amp; mv temp.json ~/.gm/config/genesis.json</p>',21),o=[s];function r(c,d,l,h,u,g){return a(),t("div",null,o)}const q=e(i,[["render",r]]);export{m as __pageData,q as default};
