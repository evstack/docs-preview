import{_ as t,c as o,ag as s,G as i,B as l,o as r}from"./chunks/framework.DyAE7V2E.js";const f=JSON.parse('{"title":"Celestia Gas Calculator","description":"Interactive estimator that mirrors Celestia MsgPayForBlobs gas logic with a focus on header sizing.","frontmatter":{"title":"Celestia Gas Calculator","description":"Interactive estimator that mirrors Celestia MsgPayForBlobs gas logic with a focus on header sizing.","head":[["meta",{"name":"og:title","content":"Celestia Gas Calculator | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/celestia-gas-calculator.md","filePath":"guides/celestia-gas-calculator.md","lastUpdated":1761653834000}'),c={name:"guides/celestia-gas-calculator.md"};function n(d,e,u,m,p,h){const a=l("CelestiaGasEstimator");return r(),o("div",null,[e[0]||(e[0]=s('<h1 id="celestia-gas-calculator" tabindex="-1">Celestia Gas Calculator <a class="header-anchor" href="#celestia-gas-calculator" aria-label="Permalink to &quot;Celestia Gas Calculator&quot;">​</a></h1><p>Fine-tune the inputs below to see how the 175-byte block header, block cadence, and blob payloads contribute to the final <code>gasLimit</code> and transaction fee. All calculations mirror the structure of Celestia’s <code>DefaultEstimateGas</code>. Enter gas prices in <code>uTIA / gas</code> (the chain’s native denomination) and the estimator will report fees in <code>TIA</code>.</p><p>For this first iteration the gas parameters are locked to the current Celestia mainnet defaults: fixed cost <code>65,000</code>, <code>8</code> gas per blob byte, effective share size <code>480</code> bytes, and zero static per-blob gas. Parameter overrides and live chain lookups will land in a follow-up.</p>',3)),i(a)])}const C=t(c,[["render",n]]);export{f as __pageData,C as default};
