import{_ as i,c as a,ag as n,o as t}from"./chunks/framework.C-36ft97.js";const g=JSON.parse('{"title":"Migrating an Existing Chain to ev-abci","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Migrating an Existing Chain to ev-abci | Evolve"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/migrating-to-ev-abci.md","filePath":"guides/migrating-to-ev-abci.md","lastUpdated":1761663179000}'),e={name:"guides/migrating-to-ev-abci.md"};function h(p,s,l,k,o,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="migrating-an-existing-chain-to-ev-abci" tabindex="-1">Migrating an Existing Chain to ev-abci <a class="header-anchor" href="#migrating-an-existing-chain-to-ev-abci" aria-label="Permalink to &quot;Migrating an Existing Chain to ev-abci&quot;">​</a></h1><p>This guide is for developers of existing Cosmos SDK chains who want to replace their node&#39;s default CometBFT consensus engine and <code>start</code> command with the <code>ev-abci</code> implementation. By following these steps, you will reconfigure your chain to run as an <code>ev-abci</code> node.</p><h2 id="overview-of-changes" tabindex="-1">Overview of Changes <a class="header-anchor" href="#overview-of-changes" aria-label="Permalink to &quot;Overview of Changes&quot;">​</a></h2><p>The migration process involves two key modifications:</p><ol><li><strong>Node Entrypoint (<code>main.go</code>):</strong> Replacing the default <code>start</code> and <code>init</code> commands with the <code>ev-abci</code> versions.</li><li><strong>Application Logic (<code>app.go</code>):</strong> For certain modules like <code>migrationmngr</code>, you must add logic to your <code>app.go</code> file to correctly manage the chain&#39;s state during state-machine transitions.</li></ol><p>This document will guide you through both parts.</p><hr><h2 id="part-1-modifying-the-node-entrypoint-main-go" tabindex="-1">Part 1: Modifying the Node Entrypoint (<code>main.go</code>) <a class="header-anchor" href="#part-1-modifying-the-node-entrypoint-main-go" aria-label="Permalink to &quot;Part 1: Modifying the Node Entrypoint (\`main.go\`)&quot;">​</a></h2><p>The first step is to change your application&#39;s main entrypoint to use the <code>ev-abci</code> server commands.</p><h3 id="_1-locate-your-application-s-entrypoint" tabindex="-1">1. Locate Your Application&#39;s Entrypoint <a class="header-anchor" href="#_1-locate-your-application-s-entrypoint" aria-label="Permalink to &quot;1. Locate Your Application&#39;s Entrypoint&quot;">​</a></h3><p>Open the main entrypoint file for your chain&#39;s binary. This is usually found at <code>cmd/&lt;your-app-name&gt;/main.go</code>.</p><h3 id="_2-modify-main-go" tabindex="-1">2. Modify <code>main.go</code> <a class="header-anchor" href="#_2-modify-main-go" aria-label="Permalink to &quot;2. Modify \`main.go\`&quot;">​</a></h3><p>You will need to add a new import and then overwrite the default <code>start</code> and <code>init</code> commands with the ones provided by <code>ev-abci</code>.</p><p>Below is a comprehensive example of what your <code>main.go</code> might look like before and after the changes.</p><h4 id="before-changes" tabindex="-1">Before Changes <a class="header-anchor" href="#before-changes" aria-label="Permalink to &quot;Before Changes&quot;">​</a></h4><p>A typical <code>main.go</code> file uses the default <code>server.AddCommands</code> to add all the standard node commands.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cmd/&lt;appd&gt;/main.go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/spf13/cobra</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&lt;your-app-path&gt;/app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Use:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;appd&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Short: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Your App Daemon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootCmd, app.DefaultNodeHome, app.New, app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MakeEncodingConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), tx.DefaultSignModes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HandleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="after-changes" tabindex="-1">After Changes <a class="header-anchor" href="#after-changes" aria-label="Permalink to &quot;After Changes&quot;">​</a></h4><p>To migrate, you will continue to use <code>server.AddCommands</code> to get useful commands like <code>keys</code> and <code>export</code>, but you will then overwrite the <code>start</code> and <code>init</code> commands with the <code>ev-abci</code> versions.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cmd/&lt;appd&gt;/main.go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/spf13/cobra</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// Import the ev-abci server package</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	evabci_server </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&lt;your-app-path&gt;/app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Use:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;appd&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Short: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Your App Daemon (ev-abci enabled)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootCmd, app.DefaultNodeHome, app.New, app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MakeEncodingConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), tx.DefaultSignModes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// --- Overwrite with ev-abci commands ---</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(evabci_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InitCmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	startCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Use:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Short: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Run the full node with ev-abci&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		RunE: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cobra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmd, evabci_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StartHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	evabci_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddFlags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(startCmd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(startCmd)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// --- End of ev-abci changes ---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootCmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HandleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="part-2-modifying-the-application-logic-app-go" tabindex="-1">Part 2: Modifying the Application Logic (<code>app.go</code>) <a class="header-anchor" href="#part-2-modifying-the-application-logic-app-go" aria-label="Permalink to &quot;Part 2: Modifying the Application Logic (\`app.go\`)&quot;">​</a></h2><p>If your chain utilizes the <code>migrationmngr</code> module to transition from a PoS validator set to a sequencer-based model, you must ensure that the standard <code>staking</code> module does not send conflicting validator updates during the migration.</p><p><em>Note: In order to understand the migration manager in depth, please refer to the <a href="https://github.com/evstack/ev-abci/tree/main/modules/migrationmngr" target="_blank" rel="noreferrer">migration manager documentation</a>.</em></p><h3 id="for-chains-using-the-migrationmngr-module" tabindex="-1">For Chains Using the <code>migrationmngr</code> Module <a class="header-anchor" href="#for-chains-using-the-migrationmngr-module" aria-label="Permalink to &quot;For Chains Using the \`migrationmngr\` Module&quot;">​</a></h3><p><strong>Goal:</strong> To ensure the <code>migrationmngr</code> module is the <em>sole</em> source of validator set updates during a migration.</p><p>Instead of manually adding conditional logic to your <code>app.go</code>, you simply need to replace the standard Cosmos SDK <code>x/staking</code> module with the <strong>staking wrapper module</strong> provided in <code>ev-abci</code>. The wrapper&#39;s <code>EndBlock</code> method is hardcoded to prevent it from sending validator updates, cleanly delegating that responsibility to the <code>migrationmngr</code> module when a migration is active.</p><h4 id="action-swap-staking-module-imports" tabindex="-1">Action: Swap Staking Module Imports <a class="header-anchor" href="#action-swap-staking-module-imports" aria-label="Permalink to &quot;Action: Swap Staking Module Imports&quot;">​</a></h4><p>In your <code>app.go</code> file (and any other files that import the staking module), replace the import for the Cosmos SDK&#39;s <code>x/staking</code> module with the one from <code>ev-abci</code>.</p><p><strong>Replace this:</strong></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingkeeper </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/keeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingtypes </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>With this:</strong></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/staking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // The wrapper module</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingkeeper </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/evstack/ev-abci/modules/staking/keeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	stakingtypes </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cosmos/cosmos-sdk/x/staking/types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Staking types remain the same</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>By changing the import path, your application&#39;s dependency injection system will automatically use the wrapper module. No other changes to your <code>EndBlocker</code> method are needed. This is the only required modification to <code>app.go</code> for the migration to work correctly.</p><hr><h2 id="part-3-build-and-verification" tabindex="-1">Part 3: Build and Verification <a class="header-anchor" href="#part-3-build-and-verification" aria-label="Permalink to &quot;Part 3: Build and Verification&quot;">​</a></h2><h3 id="_1-re-build-your-application" tabindex="-1">1. Re-build Your Application <a class="header-anchor" href="#_1-re-build-your-application" aria-label="Permalink to &quot;1. Re-build Your Application&quot;">​</a></h3><p>After making these changes, re-build your application&#39;s binary:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./cmd/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="_2-verify-the-changes" tabindex="-1">2. Verify the Changes <a class="header-anchor" href="#_2-verify-the-changes" aria-label="Permalink to &quot;2. Verify the Changes&quot;">​</a></h3><p>To verify that the <code>main.go</code> changes were successful, check the help text for the new <code>start</code> command. It should now include the <code>ev-abci</code> specific flags.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;appd&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><p>You should see flags like <code>--ev-node.attester-mode</code>, <code>--ev-node.aggregator</code>, and others from the <code>ev-node</code> and <code>network</code> modules.</p><p>Your node is now fully configured to run using <code>ev-abci</code>. When you run the <code>start</code> command, it will no longer start a CometBFT instance but will instead start the <code>ev-abci</code> service that connects to a Rollkit sequencer, and it will correctly handle any on-chain migrations.</p>`,44)]))}const c=i(e,[["render",h]]);export{g as __pageData,c as default};
