import{C as n}from"./chunks/callout.C3E0oSrO.js";import{c as e,j as i,a,G as l,a3 as t,o as p}from"./chunks/framework.BPEMuM0k.js";/* empty css                                                                       */const h={class:"tip custom-block"},u=JSON.parse('{"title":"🐳 Docker Compose","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"🐳 Docker Compose | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"tutorials/docker-compose.md","filePath":"tutorials/docker-compose.md","lastUpdated":1729698134000}'),k={name:"tutorials/docker-compose.md"},y=Object.assign(k,{setup(o){return(r,s)=>(p(),e("div",null,[s[1]||(s[1]=i("h1",{id:"🐳-docker-compose",tabindex:"-1"},[a("🐳 Docker Compose "),i("a",{class:"header-anchor",href:"#🐳-docker-compose","aria-label":'Permalink to "🐳 Docker Compose"'},"​")],-1)),s[2]||(s[2]=i("p",null,[a("This tutorial is going to show you how to deploy the "),i("a",{href:"/docs-preview/pr-493/tutorials/wordle"},"wordle rollup"),a(" using Docker Compose.")],-1)),s[3]||(s[3]=i("p",null,[a("You can learn more about Docker Compose "),i("a",{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noreferrer"},"here"),a(".")],-1)),i("div",h,[s[0]||(s[0]=i("p",{class:"custom-block-title"},"TIP",-1)),l(n)]),s[4]||(s[4]=t(`<h2 id="prerequisites" tabindex="-1">💻 Pre-requisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;💻 Pre-requisites {#prerequisites}&quot;">​</a></h2><p>Make sure you have your wordle rollup ready by completing <a href="/docs-preview/pr-493/tutorials/wordle">the Build Your Rollup tutorial</a>.</p><h2 id="dependencies" tabindex="-1">🛠️ Dependencies <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;🛠️ Dependencies {#dependencies}&quot;">​</a></h2><h3 id="docker-compose" tabindex="-1">💻 Docker Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;💻 Docker Compose {#docker-compose}&quot;">​</a></h3><p>You can <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">install docker compose here</a>.</p><p>Once installed, you can verify the installation by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v2.23.0-desktop.1</span></span></code></pre></div><h2 id="setting-up-your-environment" tabindex="-1">🛠️ Setting up Your Environment <a class="header-anchor" href="#setting-up-your-environment" aria-label="Permalink to &quot;🛠️ Setting up Your Environment {#setting-up-your-environment}&quot;">​</a></h2><p>The wordle rollup is a relatively simple rollup in that there are just 2 nodes involved: the rollup and the data availability network (DA) node.</p><p>We will use a local DA node for this tutorial and run it with our rollup.</p><p>To save time, we can use the <a href="https://github.com/rollkit/local-da/blob/main/Dockerfile" target="_blank" rel="noreferrer">local DA Dockerfile found here.</a></p><p>This will allow us to focus on how we can run the wordle rollup with Docker Compose.</p><h3 id="dockerfile" tabindex="-1">🐳 Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;🐳 Dockerfile {#dockerfile}&quot;">​</a></h3><p>First, we need to create a Dockerfile for our wordle rollup. Create a new file called <code>Dockerfile</code> in the root of the <code>wordle</code> directory and add the following code:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stage 1: Install ignite CLI and rollkit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> golang </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt update &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	apt-get install -y \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	build-essential \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	ca-certificates \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	curl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install rollkit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curl -sSL https://rollkit.dev/install.sh | sh -s v0.13.6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install ignite</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curl https://get.ignite.com/cli@v28.4.0! | bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set the working directory</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cache dependencies.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./go.mod . </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./go.sum . </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> go mod download</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Copy all files from the current directory to the container</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build the chain</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ignite chain build &amp;&amp; ignite rollkit init --local-da</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Initialize the rollkit.toml file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rollkit toml init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run rollkit command to initialize the entrypoint executable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rollkit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stage 2: Set up the runtime environment</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debian:bookworm-slim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install jq</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt update &amp;&amp; \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	apt-get install -y \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	jq</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set the working directory</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /root</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Copy over the rollkit binary from the build stage</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=base /go/bin/rollkit /usr/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Copy the entrypoint and rollkit.toml files from the build stage</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=base /app/entrypoint ./entrypoint</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=base /app/rollkit.toml ./rollkit.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Copy the $HOME/.wordle directory from the build stage.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This directory contains all your chain config.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=base /root/.wordle /root/.wordle</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ensure the entrypoint script is executable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chmod +x ./entrypoint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Keep the container running after it has been started</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tail -f /dev/null</span></span></code></pre></div><p>This Dockerfile sets up the environment to build the rollup and run the wordle node. It then sets up the runtime environment to run the rollup. This allows you as the developer to modify any files, and then simply rebuild the Docker image to run the new rollup.</p><p>Build the docker image by running the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wordle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>You can then see the built image by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><p>You should see the following output:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REPOSITORY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  TAG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         SIZE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wordle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  5d3533c1ea1c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   443MB</span></span></code></pre></div><h3 id="docker-compose-file" tabindex="-1">🐳 Docker Compose File <a class="header-anchor" href="#docker-compose-file" aria-label="Permalink to &quot;🐳 Docker Compose File {#docker-compose-file}&quot;">​</a></h3><p>Next we need to create our <code>compose.yaml</code> file for docker compose to use.</p><p>In the root of the <code>wordle</code> directory, create a new file called <code>compose.yaml</code> and add the following code:</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Define the wordle rollup service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  wordle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Set the name of the docker container for ease of use</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wordle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Use the image we just built</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wordle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Used for networking between the two services</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">host</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The command config is used for launching the GM rollup once the Docker container is running</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rollkit start --rollkit.aggregator --rollkit.da_address http://localhost:7980</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Ensures the local-da service is up and running before starting the rollup</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local-da</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Define the local DA service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  local-da</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Use the published image from rollkit</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/rollkit/local-da:v0.2.1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Set the name of the docker container for ease of use</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local-da</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Publish the ports to connect</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;7980:7980&quot;</span></span></code></pre></div><p>We now have all we need to run the wordle rollup and connect to a local DA node.</p><h3 id="run-wordle-rollup" tabindex="-1">🚀 Run Wordle Rollup <a class="header-anchor" href="#run-wordle-rollup" aria-label="Permalink to &quot;🚀 Run Wordle Rollup {#run-wordle-rollup}&quot;">​</a></h3><p>Run your wordle rollup by running the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><p>You&#39;ll see logs of your rollup being output.</p><p>Congratulations! You have successfully run the wordle rollup with Docker Compose.</p><h2 id="interacting-with-the-rollup" tabindex="-1">🚀 Interacting with the Rollup <a class="header-anchor" href="#interacting-with-the-rollup" aria-label="Permalink to &quot;🚀 Interacting with the Rollup {#interacting-with-the-rollup}&quot;">​</a></h2><p>Since we are using docker images, we can interact with the rollup by entering the docker container.</p><p>You can see the docker containers running with the wordle rollup and the local DA node by running the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><p>You should see output like the following:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             COMMAND</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                  CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          PORTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                              NAMES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cbf66a881cb2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   wordle:latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     &quot;/bin/sh -c &#39;rollkit…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.0.0.0:26657</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">26657/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                           wordle</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">09bdf1e94862</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ghcr.io/rollkit/local-da:v0.2.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;local-da -listen-all&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.0.0.0:7980</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7980/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                             local-da</span></span></code></pre></div><p>We can see the wordle rollup running in container <code>wordle</code> and the local DA network running in container <code>local-da</code>.</p><p>Since our rollup is running in a docker container, we want to enter the docker container to interact with it via the Rollkit CLI. We can do this by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wordle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span></span></code></pre></div><p>Now that you are in the docker container, you can interact with the rollup using the Rollkit CLI and the example commands you used in the <a href="/docs-preview/pr-493/tutorials/wordle#interacting-with-the-rollup">Wordle tutorial</a>.</p><p>Once you are done interacting with your rollup, you can exit out of your docker container with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span></code></pre></div><p>Then you can shut down your rollup environment by running <code>CRTL+C</code> in your terminal.</p><h2 id="🎉-next-steps" tabindex="-1">🎉 Next steps <a class="header-anchor" href="#🎉-next-steps" aria-label="Permalink to &quot;🎉 Next steps&quot;">​</a></h2><p>Congratulations again! You now know how to run your rollup with docker compose and interact with it using the Rollkit CLI in the docker container.</p>`,48))]))}});export{u as __pageData,y as default};
