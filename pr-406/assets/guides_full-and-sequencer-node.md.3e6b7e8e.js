import{c as n}from"./chunks/constants.adbe63d5.js";import{o as l,c as o,k as s,t as e,l as p,X as a}from"./chunks/framework.b3a82aaf.js";const t=a('<h1 id="full-and-sequencer-node-rollup-setup" tabindex="-1">Full and sequencer node rollup setup <a class="header-anchor" href="#full-and-sequencer-node-rollup-setup" aria-label="Permalink to &quot;Full and sequencer node rollup setup&quot;">​</a></h1><p>This guide will cover how to set up the GM World rollup example as a multi-node network using a full and sequencer node.</p><h2 id="running-local-da" tabindex="-1">Running a local DA network <a class="header-anchor" href="#running-local-da" aria-label="Permalink to &quot;Running a local DA network {#running-local-da}&quot;">​</a></h2><p>In this demo, we&#39;ll be using the local-da setup used in <a href="./../tutorials/gm-world">GM World</a></p><p>To set up a local DA network node:</p>',5),r={class:"language-bash"},c=s("button",{title:"Copy Code",class:"copy"},null,-1),C=s("span",{class:"lang"},"bash",-1),y={class:"shiki material-theme-palenight"},i={class:"line"},D=a('<span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://rollkit.dev/install-local-da.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span>',12),d={style:{color:"#C3E88D"}},A=a(`<p>This script builds and runs the node, now listening on port <code>7980</code>.</p><h2 id="running-a-sequencer-node" tabindex="-1">Running a sequencer node <a class="header-anchor" href="#running-a-sequencer-node" aria-label="Permalink to &quot;Running a sequencer node&quot;">​</a></h2><p>By following the <a href="./../tutorials/gm-world">GM World</a> tutorial, you will have a sequencer node running.</p><p>We wil now set up a full node to run alongside the sequencer node.</p><h2 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h2><p>Clone the script for the full node:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># From inside the \`gm\` directory</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/gm</span></span>
<span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://rollkit.dev/gm/init-full-node.sh</span></span></code></pre></div><h3 id="update-the-p2p-address" tabindex="-1">Update the p2p address <a class="header-anchor" href="#update-the-p2p-address" aria-label="Permalink to &quot;Update the p2p address&quot;">​</a></h3><p>Once your sequencer node starts producing blocks, it will show the p2p address, beginning with 12D:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">port</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">binded</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=x/ibc/port</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">port=icahost</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">claimed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">capability</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">capability=</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=icahost</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name=ports/icahost</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">impl=RPC</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">msg={}</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">impl=Node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">msg={}</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">starting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">P2P</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=server</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serving</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HTTP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">address={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">IP</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Port</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:36657,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Zone</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#C3E88D;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=server</span></span>
<span class="line has-focus"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listening</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">address=/ip4/10.0.0.171/tcp/36656/p2p/12D3KooWCmfJLkQjZUArWpNUDJSezeFiLYzCULXe1dEKY6ZpXZpk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=p2p</span><span style="color:#A6ACCD;"> </span></span>
<span class="line has-focus"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listening</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">address=/ip4/127.0.0.1/tcp/36656/p2p/12D3KooWCmfJLkQjZUArWpNUDJSezeFiLYzCULXe1dEKY6ZpXZpk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=p2p</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">no</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">seed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">only</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listening</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">connections</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=p2p</span></span>
<span class="line"><span style="color:#FFCB6B;">3:55PM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">INF</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">starting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Celestia</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Data</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Availability</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Layer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">baseURL=http://localhost:26658</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module=da_client</span></span></code></pre></div><p>In your <code>init-full-node.sh</code> script, you will now set the <code>P2P_ID</code> variable for your script to use:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line diff remove"><span style="color:#A6ACCD;">P2P_ID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your-p2p-id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">P2P_ID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12D3KooWCmfJLkQjZUArWpNUDJSezeFiLYzCULXe1dEKY6ZpXZpk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span></code></pre></div><h2 id="start-the-full-node" tabindex="-1">Start the full node <a class="header-anchor" href="#start-the-full-node" aria-label="Permalink to &quot;Start the full node&quot;">​</a></h2><p>Now run your full node with the script:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># from the gm directory</span></span>
<span class="line"><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init-full-node.sh</span></span></code></pre></div><p>Congratulations! You will now have a full node running alongside your Rollkit sequencer.</p>`,16),m=JSON.parse('{"title":"Full and sequencer node rollup setup","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Full and sequencer node rollup setup | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"guides/full-and-sequencer-node.md","filePath":"guides/full-and-sequencer-node.md","lastUpdated":1719512045000}'),u={name:"guides/full-and-sequencer-node.md"},f=Object.assign(u,{setup(h){return(E,F)=>(l(),o("div",null,[t,s("div",r,[c,C,s("pre",y,[s("code",null,[s("span",i,[D,s("span",d,e(p(n).localDALatestTag),1)])])])]),A]))}});export{m as __pageData,f as default};
