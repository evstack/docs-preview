import{_ as d,c,a3 as p,b as s,w as i,a4 as r,j as e,a as t,B as u,o,G as l}from"./chunks/framework.BZyQX7AL.js";const N=JSON.parse('{"title":"Transaction flow","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Transaction flow | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"learn/transaction-flow.md","filePath":"learn/transaction-flow.md","lastUpdated":1748003302000}'),f={name:"learn/transaction-flow.md"};function m(A,a,h,g,k,b){const n=u("Mermaid");return o(),c("div",null,[a[4]||(a[4]=p('<h1 id="transaction-flow" tabindex="-1">Transaction flow <a class="header-anchor" href="#transaction-flow" aria-label="Permalink to &quot;Transaction flow&quot;">​</a></h1><p>Users use a light node to communicate with the P2P network for two primary reasons:</p><ul><li>submitting transactions</li><li>gossipping headers and fraud proofs</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Light nodes are still a work in progress.</p></div><p>Here&#39;s what the typical transaction flow looks like:</p><h2 id="transaction-submission" tabindex="-1">Transaction submission <a class="header-anchor" href="#transaction-submission" aria-label="Permalink to &quot;Transaction submission&quot;">​</a></h2>',6)),(o(),s(r,null,{default:i(()=>[l(n,{id:"mermaid-29",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20User%0A%20%20%20%20participant%20LightNode%0A%20%20%20%20participant%20FullNode%0A%20%20%20%20%0A%20%20%20%20User-%3E%3ELightNode%3A%20Submit%20Transaction%0A%20%20%20%20LightNode-%3E%3EFullNode%3A%20Gossip%20Transaction%0A%20%20%20%20FullNode--%3E%3EUser%3A%20Refuse%20(if%20invalid)%0A"})]),fallback:i(()=>a[0]||(a[0]=[t(" Loading... ")])),_:1})),a[5]||(a[5]=e("h2",{id:"transaction-validation-and-processing",tabindex:"-1"},[t("Transaction validation and processing "),e("a",{class:"header-anchor",href:"#transaction-validation-and-processing","aria-label":'Permalink to "Transaction validation and processing"'},"​")],-1)),(o(),s(r,null,{default:i(()=>[l(n,{id:"mermaid-33",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20FullNode%0A%20%20%20%20participant%20Sequencer%0A%0A%20%20%20%20FullNode-%3E%3EFullNode%3A%20Check%20Validity%0A%20%20%20%20FullNode-%3E%3EFullNode%3A%20Add%20to%20Mempool%20(if%20valid)%0A%20%20%20%20FullNode--%3E%3EUser%3A%20Transaction%20Processed%20(if%20valid)%0A%20%20%20%20FullNode-%3E%3ESequencer%3A%20Inform%20about%20Valid%20Transaction%0A%20%20%20%20Sequencer-%3E%3EDALayer%3A%20Add%20to%20Block%0A"})]),fallback:i(()=>a[1]||(a[1]=[t(" Loading... ")])),_:1})),a[6]||(a[6]=e("h2",{id:"block-processing",tabindex:"-1"},[t("Block processing "),e("a",{class:"header-anchor",href:"#block-processing","aria-label":'Permalink to "Block processing"'},"​")],-1)),(o(),s(r,null,{default:i(()=>[l(n,{id:"mermaid-37",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20DALayer%0A%20%20%20%20participant%20FullNode%0A%20%20%20%20participant%20Chain%0A%0A%20%20%20%20DALayer-%3E%3EChain%3A%20Update%20State%0A%20%20%20%20DALayer-%3E%3EFullNode%3A%20Download%20%26%20Validate%20Block%0A%20%20%20%20FullNode-%3E%3EFullNode%3A%20Generate%20Fraud%20Proofs%20(if%20invalid)%0A"})]),fallback:i(()=>a[2]||(a[2]=[t(" Loading... ")])),_:1})),a[7]||(a[7]=e("h2",{id:"fraud-proof-gossip-and-forking",tabindex:"-1"},[t("Fraud proof gossip and forking "),e("a",{class:"header-anchor",href:"#fraud-proof-gossip-and-forking","aria-label":'Permalink to "Fraud proof gossip and forking"'},"​")],-1)),(o(),s(r,null,{default:i(()=>[l(n,{id:"mermaid-41",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20FullNode%0A%20%20%20%20participant%20LightNode%0A%20%20%20%20participant%20Chain%0A%0A%20%20%20%20FullNode-%3E%3ELightNode%3A%20Gossip%20Fraud%20Proofs%20(if%20invalid)%0A%20%20%20%20Chain-%3E%3EChain%3A%20Halt%20%26%20Decide%20to%20Fork%20(if%20invalid)%0A%20%20%20%20Chain-%3E%3EDALayer%3A%20Submit%20New%20Block%20(after%20fork)%0A"})]),fallback:i(()=>a[3]||(a[3]=[t(" Loading... ")])),_:1})),a[8]||(a[8]=e("p",null,"To transact, users submit a transaction to their light node, which gossips the transaction to a full node. Before adding the transaction to their mempool, the full node checks its validity. Valid transactions are included in the mempool, while invalid ones are refused, and the user's transaction will not be processed.",-1)),a[9]||(a[9]=e("p",null,"If the transaction is valid and has been included in the mempool, the sequencer can add it to a block, which is then submitted to the data availability (DA) layer. This results in a successful transaction flow for the user, and the state of the system is updated accordingly.",-1))])}const w=d(f,[["render",m]]);export{N as __pageData,w as default};
