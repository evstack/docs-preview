import{_ as i,c as a,a3 as e,o as t}from"./chunks/framework.BZyQX7AL.js";const E=JSON.parse('{"title":"Integrating the based.Sequencer into Your System","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Integrating the based.Sequencer into Your System | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"tutorials/sequencing/based.md","filePath":"tutorials/sequencing/based.md","lastUpdated":1748003302000}'),n={name:"tutorials/sequencing/based.md"};function l(h,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="integrating-the-based-sequencer-into-your-system" tabindex="-1">Integrating the <code>based.Sequencer</code> into Your System <a class="header-anchor" href="#integrating-the-based-sequencer-into-your-system" aria-label="Permalink to &quot;Integrating the \`based.Sequencer\` into Your System&quot;">​</a></h1><p>This tutorial provides a step-by-step guide for integrating the <code>based.Sequencer</code> from Rollkit into your own system project. It is designed to be more in-depth, helping you understand not just the code, but also the architectural flow and where to begin.</p><hr><h2 id="overview-what-is-the-based-sequencer" tabindex="-1">Overview: What is the <code>based.Sequencer</code>? <a class="header-anchor" href="#overview-what-is-the-based-sequencer" aria-label="Permalink to &quot;Overview: What is the \`based.Sequencer\`?&quot;">​</a></h2><p>The <code>based.Sequencer</code> is a component that manages transaction batching, submission, and retrieval for systems that use a Data Availability (DA) layer. It is designed for advanced system scenarios where you want to synchronize with an external DA layer (such as another chain or service) and handle concepts like height drift, persistent pending transactions, and robust batch submission with retries.</p><hr><h2 id="when-should-you-use-the-based-sequencer" tabindex="-1">When Should You Use the <code>based.Sequencer</code>? <a class="header-anchor" href="#when-should-you-use-the-based-sequencer" aria-label="Permalink to &quot;When Should You Use the \`based.Sequencer\`?&quot;">​</a></h2><ul><li>You want your system to follow or synchronize with an external DA layer (e.g., a parent L1 or another system).</li><li>You need to handle advanced DA features like height drift, batch retries, and persistent mempool.</li><li>You want to build a system that can operate in &#39;based&#39; mode, as seen in the Rollkit EVM-based example.</li></ul><hr><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li>A Rollkit-based system project (see the <a href="https://github.com/rollkit/rollkit" target="_blank" rel="noreferrer">Rollkit repo</a>).</li><li>A DA layer endpoint (or use the DummyDA for local testing).</li><li>Familiarity with Go modules and the Rollkit configuration system.</li></ul><hr><h3 id="_1-project-structure-and-where-to-start" tabindex="-1">1. Project Structure and Where to Start <a class="header-anchor" href="#_1-project-structure-and-where-to-start" aria-label="Permalink to &quot;1. Project Structure and Where to Start&quot;">​</a></h3><p><strong>Start in your system&#39;s main entrypoint</strong> (usually a <code>cmd/run.go</code> or similar). This is where you will:</p><ul><li>Parse configuration</li><li>Set up logging</li><li>Initialize the DA client(s)</li><li>Set up persistent storage</li><li>Instantiate the <code>based.Sequencer</code></li><li>Wire up the rest of your node (executor, P2P, etc.)</li></ul><p><strong>Reference Example:</strong></p><ul><li>See <code>rollups/evm/based/cmd/run.go</code> in the Rollkit repo for a full working example.</li></ul><hr><h3 id="_2-import-required-packages" tabindex="-1">2. Import Required Packages <a class="header-anchor" href="#_2-import-required-packages" aria-label="Permalink to &quot;2. Import Required Packages&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path/filepath</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/da/jsonrpc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/pkg/cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/pkg/config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/pkg/p2p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/pkg/p2p/key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/pkg/store</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rollkit/rollkit/sequencers/based</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...other imports as needed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="_3-parse-configuration-and-set-up-logger" tabindex="-1">3. Parse Configuration and Set Up Logger <a class="header-anchor" href="#_3-parse-configuration-and-set-up-logger" aria-label="Permalink to &quot;3. Parse Configuration and Set Up Logger&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nodeConfig, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rollcmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ParseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmd)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rollcmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetupLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nodeConfig.Log)</span></span></code></pre></div><hr><h3 id="_4-initialize-the-data-availability-da-layer" tabindex="-1">4. Initialize the Data Availability (DA) Layer <a class="header-anchor" href="#_4-initialize-the-data-availability-da-layer" aria-label="Permalink to &quot;4. Initialize the Data Availability (DA) Layer&quot;">​</a></h3><p>You may want to support both a production DA (via JSON-RPC) and a local DummyDA for testing:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> da </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">coreda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DA</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nodeConfig.DA.AuthToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    client, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonrpc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, logger, nodeConfig.DA.Address, nodeConfig.DA.AuthToken, nodeConfig.DA.Namespace)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;failed to create DA client: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    da </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.DA</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    da </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coreda.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewDummyDA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="_5-set-up-persistent-storage" tabindex="-1">5. Set Up Persistent Storage <a class="header-anchor" href="#_5-set-up-persistent-storage" aria-label="Permalink to &quot;5. Set Up Persistent Storage&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datastore, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewDefaultKVStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nodeConfig.RootDir, nodeConfig.DBPath, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;based&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;failed to create datastore: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="_6-instantiate-the-based-sequencer" tabindex="-1">6. Instantiate the <code>based.Sequencer</code> <a class="header-anchor" href="#_6-instantiate-the-based-sequencer" aria-label="Permalink to &quot;6. Instantiate the \`based.Sequencer\`&quot;">​</a></h3><p>You need to provide:</p><ul><li>Logger</li><li>DA implementation</li><li>System ID (usually your chain ID as bytes)</li><li>DA start height (where to begin scanning the DA layer)</li><li>Max height drift (how far ahead you can scan)</li><li>Persistent datastore</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequencer, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> based.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewSequencer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    logger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    da,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nodeConfig.ChainID),      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// System ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    daStartHeight,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g., from config or flag</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxHeightDrift,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g., from config or flag</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datastore,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;failed to create based sequencer: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="_7-set-up-p2p-networking-optional-but-recommended" tabindex="-1">7. Set Up P2P Networking (Optional, but recommended) <a class="header-anchor" href="#_7-set-up-p2p-networking-optional-but-recommended" aria-label="Permalink to &quot;7. Set Up P2P Networking (Optional, but recommended)&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nodeKey, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoadNodeKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filepath.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nodeConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConfigPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;failed to load node key: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p2pClient, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p2p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nodeConfig, nodeKey, datastore, logger, p2p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NopMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;failed to create P2P client: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="_8-start-your-node" tabindex="-1">8. Start Your Node <a class="header-anchor" href="#_8-start-your-node" aria-label="Permalink to &quot;8. Start Your Node&quot;">​</a></h3><p>Wire up all components and start your node:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rollcmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StartNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    logger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cmd,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    executor,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Your application executor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sequencer,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The based sequencer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    da,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// DA client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nodeKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p2pClient,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datastore,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nodeConfig,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="_9-optional-support-multiple-da-layers" tabindex="-1">9. (Optional) Support Multiple DA Layers <a class="header-anchor" href="#_9-optional-support-multiple-da-layers" aria-label="Permalink to &quot;9. (Optional) Support Multiple DA Layers&quot;">​</a></h3><p>You can instantiate multiple DA clients (e.g., one for the system, one for &#39;based&#39; parent) and pass the appropriate one to the sequencer. See the EVM-based example for how to wire this up with flags and config.</p><hr><h3 id="_10-advanced-understanding-the-based-sequencer-flow" tabindex="-1">10. Advanced: Understanding the <code>based.Sequencer</code> Flow <a class="header-anchor" href="#_10-advanced-understanding-the-based-sequencer-flow" aria-label="Permalink to &quot;10. Advanced: Understanding the \`based.Sequencer\` Flow&quot;">​</a></h3><ul><li><strong>Pending Queue:</strong> Transactions are added to a persistent queue until they are included in a batch.</li><li><strong>Batch Submission:</strong> Batches are submitted to the DA layer with retries, exponential backoff, and gas price adjustments.</li><li><strong>Batch Retrieval:</strong> The sequencer can scan the DA layer for new batches, respecting height drift and start height.</li><li><strong>Verification:</strong> The sequencer can verify batches using DA proofs.</li></ul><hr><h3 id="_11-reference-example-flag-setup" tabindex="-1">11. Reference: Example Flag Setup <a class="header-anchor" href="#_11-reference-example-flag-setup" aria-label="Permalink to &quot;11. Reference: Example Flag Setup&quot;">​</a></h3><p>You may want to expose flags for DA endpoints, start height, max drift, etc. Example:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringVar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedURL, based.FlagBasedURL, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:26658&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Based API URL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringVar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedAuth, based.FlagBasedAuth, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Authentication token for Based API&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringVar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedNamespace, based.FlagBasedNamespace, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Namespace for Based API&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Uint64Var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedStartHeight, based.FlagBasedStartHeight, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Starting height for Based API&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Uint64Var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedMaxHeightDrift, based.FlagBasedMaxHeightDrift, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Maximum L1 block height drift&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="summary-of-required-components" tabindex="-1">Summary of Required Components <a class="header-anchor" href="#summary-of-required-components" aria-label="Permalink to &quot;Summary of Required Components&quot;">​</a></h2><ul><li><strong>Logger</strong>: For structured logging.</li><li><strong>Config</strong>: Node and application configuration.</li><li><strong>DA Client</strong>: JSON-RPC client or DummyDA for Data Availability.</li><li><strong>Datastore</strong>: Persistent storage for batches and state.</li><li><strong>Sequencer</strong>: The <code>based.Sequencer</code> instance.</li><li><strong>P2P Client</strong>: For networking (if needed).</li><li><strong>Executor</strong>: Your system’s application logic.</li></ul><hr><h2 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h2><ul><li>The <code>based.Sequencer</code> is ideal for advanced system scenarios with external DA layers.</li><li>Use persistent storage to avoid losing pending transactions on restart.</li><li>Tune <code>daStartHeight</code> and <code>maxHeightDrift</code> for your chain’s needs.</li><li>See the EVM-based example in Rollkit for a full working integration.</li></ul><hr><p><strong>If you need a minimal code template or have questions about a specific integration step, let me know!</strong></p>`,60)]))}const g=i(n,[["render",l]]);export{E as __pageData,g as default};
