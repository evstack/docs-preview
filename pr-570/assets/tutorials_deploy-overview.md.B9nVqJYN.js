import{_ as o,c as t,a3 as i,o as a}from"./chunks/framework.BZyQX7AL.js";const h=JSON.parse('{"title":"Deploying Your Application","description":"This page provides an overview of some common ways to deploy applications.","frontmatter":{"description":"This page provides an overview of some common ways to deploy applications.","head":[["meta",{"name":"og:title","content":"Deploying Your Application | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"tutorials/deploy-overview.md","filePath":"tutorials/deploy-overview.md","lastUpdated":1748003302000}'),n={name:"tutorials/deploy-overview.md"};function l(r,e,s,p,c,d){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="deploying-your-application" tabindex="-1">Deploying Your Application <a class="header-anchor" href="#deploying-your-application" aria-label="Permalink to &quot;Deploying Your Application&quot;">â€‹</a></h1><p>One of the benefits of building applications with Rollkit is the flexibility you have as a developer to choose things like the DA layer, the settlement scheme, and the execution environment.</p><p>The challenge that comes with this flexibility is that there are more services that now need to be deployed and managed while running your application.</p><p>In the tutorials so far, you&#39;ve seen various helper scripts used to make things easier. While great for tutorials, there are better ways to deploy and manage applications than using various bash scripts.</p><p>In this section, you&#39;ll see a few examples of how you can deploy your application environment with all your services running in a more production-ready way.</p><div class="warning custom-block"><p class="custom-block-title">Disclaimer</p><p>These examples are for educational purposes only. Before deploying your application for production use you should fully understand the services you are deploying and your choice in deployment method.</p></div><ul><li><a href="/docs-preview/pr-570/tutorials/docker-compose">Deploy with Docker Compose</a></li></ul>',7)]))}const y=o(n,[["render",l]]);export{h as __pageData,y as default};
