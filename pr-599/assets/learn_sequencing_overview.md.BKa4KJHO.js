import{_ as n,c as i,a3 as t,o as a}from"./chunks/framework.B1N-qxQw.js";const d=JSON.parse('{"title":"Sequencing","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Sequencing | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"learn/sequencing/overview.md","filePath":"learn/sequencing/overview.md","lastUpdated":1752824980000}'),s={name:"learn/sequencing/overview.md"};function r(l,e,o,c,h,u){return a(),i("div",null,e[0]||(e[0]=[t(`<h1 id="sequencing" tabindex="-1">Sequencing <a class="header-anchor" href="#sequencing" aria-label="Permalink to &quot;Sequencing&quot;">​</a></h1><p>Sequencing is the essential first step for handling your transactions. Think of it as an organizer that takes all incoming transactions, puts them in a clear order, and then groups them into batches. This process is vital for keeping everything consistent and making the rollup run. Rollkit uses a &quot;Sequencing Interface&quot; with key functions like submitting, retrieving, and verifying these transaction batches, ensuring smooth communication between the rollup and the sequencing mechanism, which often acts as a bridge to the underlying network.</p><h2 id="sequencing-interface" tabindex="-1">Sequencing Interface <a class="header-anchor" href="#sequencing-interface" aria-label="Permalink to &quot;Sequencing Interface {#sequencing-interface}&quot;">​</a></h2><p><a href="https://github.com/rollkit/rollkit/blob/main/core/sequencer/sequencing.go#L11" target="_blank" rel="noreferrer">Sequencing Interface</a> defines a sequencing interface for communicating between any sequencing network and Rollkit. The key functions of the interface are defined as shown below.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SubmitRollupTransaction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rollupId, data) returns (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetNextBatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rollupId, lastBatchHash, maxBytes) returns (batch, timestamp)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VerifyBatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rollupId, batchHash) returns (status)</span></span></code></pre></div><p>It mainly consists of:</p><ul><li><code>SubmitRollupTransaction</code> relays the rollup transactions from Rollkit rollup to the sequencing network</li><li><code>GetNextBatch</code> returns the next batch of transactions along with a deterministic timestamp</li><li><code>VerifyBatch</code> validates the sequenced batch</li></ul><h2 id="sequencing-implementations" tabindex="-1">Sequencing Implementations <a class="header-anchor" href="#sequencing-implementations" aria-label="Permalink to &quot;Sequencing Implementations {#sequencing-implementations}&quot;">​</a></h2><p>An implementation of the sequencing interface mainly acts as a middleware that connects Rollkit rollup and the sequencing layer. It implements the sequencing interface functions described above. There are several implementations of the sequencer but for now only one is available in Rollkit.</p><ul><li><a href="/docs-preview/pr-599/learn/sequencing/single">single-sequencer</a> - The simplest and most widely used sequencing model, where a single node (the sequencer) is responsible for ordering transactions and producing blocks.</li></ul>`,10)]))}const g=n(s,[["render",r]]);export{d as __pageData,g as default};
