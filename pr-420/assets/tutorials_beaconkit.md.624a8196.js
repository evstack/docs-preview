import{C as n}from"./chunks/callout.361f2f6e.js";import{c as o}from"./chunks/constants.1b8e7bd8.js";import{o as l,c as t,k as e,O as c,t as i,l as r,a,X as s}from"./chunks/framework.8bb2bae0.js";const p=e("h1",{id:"beaconkit-and-rollkit",tabindex:"-1"},[a("BeaconKit and Rollkit "),e("a",{class:"header-anchor",href:"#beaconkit-and-rollkit","aria-label":'Permalink to "BeaconKit and Rollkit"'},"‚Äã")],-1),d=e("p",null,[e("img",{src:"https://camo.githubusercontent.com/8aaae79e171969a2a9c950582d512cd1e3746e67d3aea6410afc04e9b6cb8055/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f6475763067343032792f696d6167652f75706c6f61642f76313731383033343331322f426561636f6e4b697442616e6e65722e706e67",alt:"beaconkit"})],-1),u=e("p",null,[a("This tutorial provides step-by-step instructions for running a BeaconKit node using Rollkit. It is a guide for developers who want to build and run their own sovereign rollup using "),e("a",{href:"https://github.com/rollkit/beacon-kit/tree/rollkit",target:"_blank",rel:"noreferrer"},"BeaconKit"),a(" and Rollkit.")],-1),h=e("p",null,"BeaconKit is a modular framework for building EVM based consensus clients. It allows developers to build their own rollup chains using the Ethereum Virtual Machine (EVM).",-1),b={class:"tip custom-block"},f=e("p",{class:"custom-block-title"},"TIP",-1),A=s('<h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites {#prerequisites}&quot;">‚Äã</a></h2><p>Before you can run a rollup, you need to have the following software installed on your machine:</p><ul><li>Rollkit</li><li>Docker</li><li>Go (version &gt;= 1.21.0)</li><li>jq</li></ul><h2 id="run-local-da-node" tabindex="-1">Run a local DA node <a class="header-anchor" href="#run-local-da-node" aria-label="Permalink to &quot;Run a local DA node {#run-local-da-node}&quot;">‚Äã</a></h2><p>First, let&#39;s set up a local data availability network node. Open a new terminal and run:</p>',5),C={class:"language-bash"},_=e("button",{title:"Copy Code",class:"copy"},null,-1),y=e("span",{class:"lang"},"bash",-1),m={class:"shiki material-theme-palenight"},g={class:"line"},k=s('<span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $HOME </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://rollkit.dev/install-local-da.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span>',16),D={style:{color:"#C3E88D"}},v=s(`<p>This script builds and runs the node, now listening on port <code>7980</code>.</p><p>After your local data availability node running on your machine, you&#39;re ready to build, test, and launch your own sovereign rollup.</p><h2 id="clone-the-repo" tabindex="-1">Clone the repo <a class="header-anchor" href="#clone-the-repo" aria-label="Permalink to &quot;Clone the repo&quot;">‚Äã</a></h2><p>Now, clone the BeaconKit repository and switch to the Rollkit branch:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $HOME</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rollkit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/rollkit/beacon-kit.git</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">beacon-kit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rollkit</span></span></code></pre></div><h2 id="start-go-ethereum-client" tabindex="-1">Start Go Ethereum client <a class="header-anchor" href="#start-go-ethereum-client" aria-label="Permalink to &quot;Start Go Ethereum client {#start-go-ethereum-client}&quot;">‚Äã</a></h2><p>You need to start a Go Ethereum client (Geth) to provide the Ethereum layer for your rollup.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/beacon-kit</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start-geth</span></span></code></pre></div><p>This will remove any existing Ethereum data directory. Initialize a new Ethereum node with a specified genesis file and start the Geth node with specific configuration options.</p><h2 id="build-and-run-beaconkit-node" tabindex="-1">Build and run the BeaconKit node <a class="header-anchor" href="#build-and-run-beaconkit-node" aria-label="Permalink to &quot;Build and run the BeaconKit node {#build-and-run-beaconkit-node}&quot;">‚Äã</a></h2><p>Open new terminal and run the following commands:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/beacon-kit</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span></code></pre></div><p>This will build, configure and start an ephemeral <code>beacond</code> node as a Rollkit sequencer.</p><p>Now you should see the familiar output of a Rollkit node running:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF indexed block events height=39 module=txindex</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF Creating and publishing block height=40 module=BlockManager</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF requesting beacon block assembly üôà module=server service=validator slot=40</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF payload retrieved from local builder üèóÔ∏è  for_slot=40 module=server num_blobs=0 override_builder=false parent_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 payload_block_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 service=payload-builder</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF computing state root for block üå≤ module=server service=validator slot=40</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF state root computed for block üíª  module=server service=validator slot=40 state_root=0x5f75afde5c6a596fa11c17e8c60ca291ffb31ae5c9a40392e0ceb4d45ab42037</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF beacon block successfully built üõ†Ô∏è  duration=46.93036ms module=server service=validator slot=40 state_root=0x5f75afde5c6a596fa11c17e8c60ca291ffb31ae5c9a40392e0ceb4d45ab42037</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF received proposal with beacon_block=true blob_sidecars=true module=baseapp service=prepare-proposal</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF no blob sidecars to verify, skipping verifier üß¢ module=server service=blockchain slot=0x28</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF received incoming beacon block üì´ module=server service=blockchain state_root=0x5f75afde5c6a596fa11c17e8c60ca291ffb31ae5c9a40392e0ceb4d45ab42037</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF calling new payload is_optimistic=false module=server payload_block_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 payload_parent_block_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 service=execution-engine</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF state root verification succeeded - accepting incoming beacon block üèéÔ∏è module=server service=blockchain state_root=0x5f75afde5c6a596fa11c17e8c60ca291ffb31ae5c9a40392e0ceb4d45ab42037</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF optimistically triggering payload build for next slot üõ©Ô∏è  module=server next_slot=41 service=blockchain</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF notifying forkchoice update  finalized_eth1_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 has_attributes=true head_eth1_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 module=server safe_eth1_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 service=execution-engine</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM WRN suggested fee recipient is not configured üîÜ fee-recipent=&quot;0x000000...000000 (20B)&quot; module=server service=engine.client</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF calling new payload is_optimistic=true module=server payload_block_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 payload_parent_block_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 service=execution-engine</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF bob the builder; can we forkchoice update it?; bob the builder; yes we can üöß for_slot=41 head_eth1_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 module=server parent_block_root=0x9676648a3c292540562b082c20c4b6663986182f5d8733f84fb3f1445b66a4ce payload_id=0x03bc2b46dc4bef55 service=payload-builder</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF finalized block block_app_hash=004216246AE7750D578035EA1C6CD13330BD91A0C3FDD628F96D514ACF691BE5 height=40 module=BlockManager num_txs_res=2 num_val_updates=0</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF executed block app_hash=004216246AE7750D578035EA1C6CD13330BD91A0C3FDD628F96D514ACF691BE5 height=40 module=BlockManager</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF notifying forkchoice update  finalized_eth1_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 has_attributes=false head_eth1_hash=0x2ff9329ffecc7f395cb72acb9fd81a6085e5d75101ab14b508f6418fbcd7d0b4 module=server safe_eth1_hash=0x88081d5e4c48de2f82464f2c8b4b46df8892fe921e5e9b13113ed2a62081d843 service=execution-engine</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF indexed block events height=40 module=txindex</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF successfully refreshed engine auth token module=server service=engine.client</span></span>
<span class="line"><span style="color:#A6ACCD;">11:45AM INF Creating and publishing block height=41 module=BlockManager</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span></code></pre></div><h1 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion {#conclusion}&quot;">‚Äã</a></h1><p>That&#39;s it! You&#39;ve successfully set up a BeaconKit node using Rollkit. This is a demonstration tutorial, and you can further customize your rollup chain by modifying the BeaconKit configuration files and flags.</p>`,17),w=JSON.parse('{"title":"BeaconKit and Rollkit","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"BeaconKit and Rollkit | Rollkit"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"tutorials/beaconkit.md","filePath":"tutorials/beaconkit.md","lastUpdated":1721132136000}'),F={name:"tutorials/beaconkit.md"},T=Object.assign(F,{setup(x){return(B,E)=>(l(),t("div",null,[p,d,u,h,e("div",b,[f,c(n)]),A,e("div",C,[_,y,e("pre",m,[e("code",null,[e("span",g,[k,e("span",D,i(r(o).localDALatestTag),1)])])])]),v]))}});export{w as __pageData,T as default};
